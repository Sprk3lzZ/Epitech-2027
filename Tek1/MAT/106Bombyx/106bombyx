#!/usr/bin/env python3

from sys import argv, exit

def evolution(n, k):
    for i in range(1, 101):
        print(f"{i} {n:.2f}")
        n = max(0, k * n * ((1000 - n) / 1000))

def scheme(n, i0, i1):
    k = 1
    copy = n
    while k < 4.0:
        n = copy
        for _ in range(i0 - 1):
            n = max(0, k * n * ((1000 - n) / 1000))
        for _ in range(i1 - i0 + 1):
            print(f"{k:.2f} {n:.2f}")
            n = max(0, k * n * ((1000 - n) / 1000))
        k += 0.01

def help():
    print("USAGE")
    print("    ./106bombyx n [k | i0 i1]")
    print()
    print("DESCRIPTION")
    print("    n       number of first generation individuals")
    print("    k       growth rate from 1 to 4")
    print("    i0      initial generation (included)")
    print("    i1      final generation (included)")

if __name__ == "__main__":
    if (len(argv) == 2):
        if (argv[1] == "-h"):
            help()
        else:
            exit(84)

    elif (len(argv) == 3):
        try:
            n = float(argv[1])
            k = float(argv[2])
        except:
            exit(84)

        if (n < 0 or k < 1 or k > 4):
            exit(84)

        evolution(n, k)

    elif (len(argv) == 4):
        try:
            n = float(argv[1])
            i0 = int(argv[2])
            i1 = int(argv[3])
        except:
            exit(84)

        if (n < 0 or i0 < 1 or i1 < 1 or i0 > i1):
            exit(84)

        scheme(n, i0, i1)

    else:
        exit(84)

    exit(0)